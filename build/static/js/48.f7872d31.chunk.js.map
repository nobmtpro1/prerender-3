{"version":3,"sources":["../../src/components/Marquee.tsx","components/BlockText/index.tsx"],"names":["style","className","play","pauseOnHover","pauseOnClick","direction","speed","delay","loop","gradient","gradientColor","gradientWidth","onFinish","onCycleComplete","children","useState","containerWidth","setContainerWidth","marqueeWidth","setMarqueeWidth","duration","setDuration","isMounted","setIsMounted","containerRef","useRef","marqueeRef","calculateWidth","current","getBoundingClientRect","width","useEffect","window","addEventListener","removeEventListener","rgbaGradientColor","React","Fragment","ref","onAnimationIteration","onAnimationEnd","BlockText","shouldPlay","setShouldPlay","textRef","text","highlightTextData","setHighlightTextData","state","useSelector","homeReducer","getMarkup","__html","getColor","colorType","color","find","clr","type","globalHeaderMessage","container","clientWidth","firstElementChild","contentStyle","backgroundColor","value","paddingLeft","paddingRight","page_url","href","dangerouslySetInnerHTML"],"mappings":"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","file":"static/js/48.f7872d31.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport \"./Marquee.scss\";\n\ninterface MarqueeProps {\n  /**\n   * Inline style for the container div\n   * Type: object\n   * Default: {}\n   */\n  style?: React.CSSProperties;\n  /**\n   * Class name to style the container div\n   * Type: string\n   * Default: \"\"\n   */\n  className?: string;\n  /**\n   * Whether to play or pause the marquee\n   * Type: boolean\n   * Default: true\n   */\n  play?: boolean;\n  /**\n   * Whether to pause the marquee when hovered\n   * Type: boolean\n   * Default: false\n   */\n  pauseOnHover?: boolean;\n  /**\n   * Whether to pause the marquee when clicked\n   * Type: boolean\n   * Default: false\n   */\n  pauseOnClick?: boolean;\n  /**\n   * The direction the marquee is sliding\n   * Type: \"left\" or \"right\"\n   * Default: \"left\"\n   */\n  direction?: \"left\" | \"right\";\n  /**\n   * Speed calculated as pixels/second\n   * Type: number\n   * Default: 20\n   */\n  speed?: number;\n  /**\n   * Duration to delay the animation after render, in seconds\n   * Type: number\n   * Default: 0\n   */\n  delay?: number;\n  /**\n   * The number of times the marquee should loop, 0 is equivalent to infinite\n   * Type: number\n   * Default: 0\n   */\n  loop?: number;\n  /**\n   * Whether to show the gradient or not\n   * Type: boolean\n   * Default: true\n   */\n  gradient?: boolean;\n  /**\n   * The rgb color of the gradient as an array of length 3\n   * Type: Array<number> of length 3\n   * Default: [255, 255, 255]\n   */\n  gradientColor?: [number, number, number];\n  /**\n   * The width of the gradient on either side\n   * Type: string\n   * Default: 200\n   */\n  gradientWidth?: number | string;\n  /**\n   * A callback for when the marquee finishes scrolling and stops. Only calls if loop is non-zero.\n   * Type: Function\n   * Default: null\n   */\n  onFinish?: () => void;\n  /**\n   * A callback for when the marquee finishes a loop. Does not call if maximum loops are reached (use onFinish instead).\n   * Type: Function\n   * Default: null\n   */\n  onCycleComplete?: () => void;\n  /**\n   * The children rendered inside the marquee\n   * Type: ReactNode\n   * Default: null\n   */\n  children?: React.ReactNode;\n}\n\nconst Marquee: React.FC<MarqueeProps> = ({\n  style = {},\n  className = \"\",\n  play = true,\n  pauseOnHover = false,\n  pauseOnClick = false,\n  direction = \"left\",\n  speed = 20,\n  delay = 0,\n  loop = 0,\n  gradient = true,\n  gradientColor = [255, 255, 255],\n  gradientWidth = 200,\n  onFinish,\n  onCycleComplete,\n  children,\n}) => {\n  // React Hooks\n  const [containerWidth, setContainerWidth] = useState(0);\n  const [marqueeWidth, setMarqueeWidth] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [isMounted, setIsMounted] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const marqueeRef = useRef<HTMLDivElement>(null);\n\n  const calculateWidth = () => {\n    // Find width of container and width of marquee\n    if (marqueeRef.current && containerRef.current) {\n      setContainerWidth(containerRef.current.getBoundingClientRect().width);\n      setMarqueeWidth(marqueeRef.current.getBoundingClientRect().width);\n    }\n\n    if (marqueeWidth < containerWidth) {\n      setDuration(containerWidth / speed);\n    } else {\n      setDuration(marqueeWidth / speed);\n    }\n  };\n\n  useEffect(() => {\n    calculateWidth();\n    // Rerender on window resize\n    window.addEventListener(\"resize\", calculateWidth);\n    return () => {\n      window.removeEventListener(\"resize\", calculateWidth);\n    };\n  });\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  // Gradient color in an unfinished rgba format\n  const rgbaGradientColor = `rgba(${gradientColor[0]}, ${gradientColor[1]}, ${gradientColor[2]}`;\n\n  return (\n    <Fragment>\n      {!isMounted ? null : (\n        <div\n          ref={containerRef}\n          style={{\n            ...style,\n            [\"--pause-on-hover\" as string]: pauseOnHover ? \"paused\" : \"running\",\n            [\"--pause-on-click\" as string]: pauseOnClick ? \"paused\" : \"running\",\n          }}\n          className={className + \" marquee-container\"}\n        >\n          {gradient && (\n            <div\n              style={{\n                [\"--gradient-color\" as string]: `${rgbaGradientColor}, 1), ${rgbaGradientColor}, 0)`,\n                [\"--gradient-width\" as string]:\n                  typeof gradientWidth === \"number\"\n                    ? `${gradientWidth}px`\n                    : gradientWidth,\n              }}\n              className=\"overlay\"\n            />\n          )}\n          <div\n            ref={marqueeRef}\n            style={{\n              [\"--play\" as string]: play ? \"running\" : \"paused\",\n              [\"--direction\" as string]:\n                direction === \"left\" ? \"normal\" : \"reverse\",\n              [\"--duration\" as string]: `${duration}s`,\n              [\"--delay\" as string]: `${delay}s`,\n              [\"--iteration-count\" as string]: !!loop ? `${loop}` : \"infinite\",\n            }}\n            className=\"marquee\"\n            onAnimationIteration={onCycleComplete}\n            onAnimationEnd={onFinish}\n          >\n            {children}\n          </div>\n          <div\n            style={{\n              [\"--play\" as string]: play ? \"running\" : \"paused\",\n              [\"--direction\" as string]:\n                direction === \"left\" ? \"normal\" : \"reverse\",\n              [\"--duration\" as string]: `${duration}s`,\n              [\"--delay\" as string]: `${delay}s`,\n              [\"--iteration-count\" as string]: !!loop ? `${loop}` : \"infinite\",\n            }}\n            className=\"marquee\"\n          >\n            {children}\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Marquee;\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector, RootStateOrAny } from 'react-redux';\r\nimport Marquee from 'react-fast-marquee';\r\n\r\nexport interface IHighlightMessage {\r\n  text: string;\r\n  page_url?: string;\r\n  color?: {\r\n    type: 'background_color' | 'font_color';\r\n    value: string;\r\n    id?: string;\r\n  }[];\r\n}\r\n\r\nfunction BlockText(): JSX.Element {\r\n  const [shouldPlay, setShouldPlay] = useState<boolean>(false);\r\n  const textRef = useRef<(HTMLAnchorElement & HTMLDivElement) | null>(null);\r\n\r\n  const [highlightTextData, setHighlightTextData] = useState<IHighlightMessage>({ text: '' });\r\n  const state = useSelector((state: RootStateOrAny) => state.homeReducer);\r\n  const fetchDataInit = () => {\r\n    setHighlightTextData(state.globalHeaderMessage);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDataInit();\r\n    const container = textRef.current?.clientWidth;\r\n    const text = textRef.current?.firstElementChild?.clientWidth;\r\n    if (text && container && text > container) setShouldPlay(true);\r\n  }, [state.globalHeaderMessage, highlightTextData]);\r\n\r\n  function getMarkup() {\r\n    return { __html: highlightTextData?.text };\r\n  }\r\n\r\n  function getColor(colorType: string) {\r\n    return highlightTextData?.color?.find((clr) => clr.type === colorType);\r\n  }\r\n\r\n  const contentStyle = {\r\n    backgroundColor: getColor('background_color')?.value || '#EBD9AC',\r\n    color: getColor('font_color')?.value || 'black',\r\n    paddingLeft: shouldPlay ? '1rem' : '',\r\n    paddingRight: shouldPlay ? '1rem' : '',\r\n  };\r\n\r\n  if (highlightTextData?.page_url) {\r\n    return (\r\n      <Marquee\r\n        speed={50}\r\n        play={shouldPlay}\r\n        pauseOnHover={!shouldPlay ? true : false}\r\n        pauseOnClick={!shouldPlay ? true : false}\r\n      >\r\n        <a\r\n          ref={textRef}\r\n          href={highlightTextData?.page_url}\r\n          className=\"block-text-container\"\r\n          style={contentStyle}\r\n          dangerouslySetInnerHTML={getMarkup()}\r\n        ></a>\r\n      </Marquee>\r\n    );\r\n  } else {\r\n    return (\r\n      <Marquee\r\n        speed={50}\r\n        play={shouldPlay}\r\n        pauseOnHover={!shouldPlay ? true : false}\r\n        pauseOnClick={!shouldPlay ? true : false}\r\n      >\r\n        <div\r\n          ref={textRef}\r\n          className=\"block-text-container\"\r\n          style={contentStyle}\r\n          dangerouslySetInnerHTML={getMarkup()}\r\n        ></div>\r\n      </Marquee>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlockText;\r\n"],"sourceRoot":""}