{"version":3,"sources":["images/icons/ic-facebook.svg","images/icons/ic-insta.svg","images/icons/ic-linkedin.svg","components/Footer/footerItem.tsx","components/Footer/index.tsx","components/Map/utils.ts","components/Map/addressForm.tsx","components/Map/index.tsx"],"names":["footerItem","data","children","className","relative_url","to","title","map","item","index","href","external_url","style","top","left","menu_icon","Footer","PHONE_CONTACT","marginTop","encodeURI","target","rel","src","icLinkedIn","width","height","alt","icFaceBook","icInsta","memo","getCity","addressArray","i","length","types","long_name","getPostalCode","getNumber","getStreet","getArea","j","getState","addressForm","props","authState","useSelector","state","userReducer","useState","address","area","building_or_block","street","number","city","street2","postal_code","additional_info","mapPosition","lat","lng","markerPosition","setState","stateProps","houseNumberAndStreet","setHouseNumberAndStreet","useEffect","words","trim","split","indexSplit","word","parseInt","splice","join","postalCodeRef","createRef","areaRef","houseNumberAndStreetRef","cityRef","validateForm","setValidateForm","Geocode","setApiKey","GOOGLE_MAP_API","enableDebug","fromLatLng","then","response","results","geometry","location","formatted_address","address_components","prevState","error","console","onChange","event","name","value","id","stateRes","newLat","newLng","checkValidInput","ref","message","replace","current","focus","scrollIntoView","block","behavior","checkValidForm","validPostalCode","validArea","validCity","validHouseNumberAndStreet","updateAddress","handleClickUpdateAddress","type","onClick","handleClickAddressItem","selectedAddressId","handleClickAddAddress","showFormAddress","AdaptiveInput","for","label","handleChange","e","refName","validate","validateContent","isAllowDelete","isUpdate","handleDeleteAddress","fromCheckOut","handleClickConfirmAddress","Map","dispatch","useDispatch","setUpdate","setShowFormAddress","clearAddressForm","undefined","center","newState","setLoading","prev","confirmAddress","setTimeout","setCheckoutForm","payment","actionsProduct","multi_card_name","localStorage","getItem","toastr","fromAddress","toString","action","province","province_code","country_code","latitude","longitude","isCheckoutForm","user_id","confirmAddressStep"],"mappings":"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","file":"static/js/19.15b3794f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ic-facebook.1490317c.svg\";","export default __webpack_public_path__ + \"static/media/ic-insta.091b579b.svg\";","export default __webpack_public_path__ + \"static/media/ic-linkedin.fb119a0a.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { map } from 'lodash';\r\n\r\nfunction footerItem({ data = {} }: { data: any }) {\r\n  const { children } = data;\r\n  return (\r\n    <div className=\"item-box\">\r\n      {data?.relative_url ? (\r\n        <Link to={data?.relative_url} className=\"py-1\">\r\n          {data.title}\r\n        </Link>\r\n      ) : (\r\n        <h3>{data.title}</h3>\r\n      )}\r\n      <ul>\r\n        {map(children, (item: any, index: number) => (\r\n          <li key={index}>\r\n            <a\r\n              href={\r\n                item?.external_url\r\n                  ? item?.external_url\r\n                  : item?.relative_url\r\n                  ? item?.relative_url\r\n                  : '/'\r\n              }\r\n              className=\"py-1\"\r\n            >\r\n              <span className=\"icon-format material-icons\" style={{ top: 0, left: -28 }}>\r\n                {item?.menu_icon}\r\n              </span>\r\n              <span>{item.title} </span>\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfooterItem.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n\r\nexport default footerItem;\r\n","import React, { memo } from 'react';\r\nimport icFaceBook from '../../images/icons/ic-facebook.svg';\r\nimport icInsta from '../../images/icons/ic-insta.svg';\r\nimport icLinkedIn from '../../images/icons/ic-linkedin.svg';\r\nimport PropTypes from 'prop-types';\r\nimport { map } from 'lodash';\r\nimport FooterItem from './footerItem';\r\nimport { PHONE_CONTACT } from '../../config';\r\n\r\nfunction Footer({ data = [] }: { data: any }) {\r\n  return (\r\n    <footer className=\"blk-footer\">\r\n      <div className=\"content container\">\r\n        <div>\r\n          <div className=\"item-box\">\r\n            <h3>contact</h3>\r\n            <ul>\r\n              <li>\r\n                <a>\r\n                  <span className=\"icon-format material-icons\" style={{ top: -4, left: -28 }}>\r\n                    call\r\n                  </span>\r\n                  {PHONE_CONTACT}\r\n                </a>\r\n              </li>\r\n              <li>Sun - Thu 10.00 AM - 8.00 PM</li>\r\n              <li>\r\n                <a href=\"mailto:support@sundora.com.bd\">\r\n                  <span className=\"icon-format material-icons\" style={{ top: -4, left: -28 }}>\r\n                    email\r\n                  </span>\r\n                  support@sundora.com.bd\r\n                </a>\r\n              </li>\r\n              <li style={{ marginTop: '1rem' }}>\r\n                <a\r\n                  href={`https://www.google.com/maps/search/${encodeURI(\r\n                    'Anabil Tower, Plot #3, Block - NW(J), Gulshan North Avenue, Kemal Ataturk Ave, Dhaka -1212, Bangladesh',\r\n                  )}/`}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <span className=\"icon-format material-icons\" style={{ top: -4, left: -28 }}>\r\n                    location_on\r\n                  </span>\r\n                  <p className=\"location\">\r\n                    Anabil Tower, Plot #3, Block - NW(J), Gulshan North Avenue, Kemal Ataturk\r\n                    Ave, Dhaka -1212, Bangladesh\r\n                  </p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"social-group\">\r\n              <li>\r\n                <a\r\n                  target=\"__blank\"\r\n                  href=\"https://bd.linkedin.com/company/sundora?trk=public_profile_topcard-current-company\"\r\n                >\r\n                  <img\r\n                    className=\"linkedin\"\r\n                    src={icLinkedIn}\r\n                    width={35}\r\n                    height={22}\r\n                    alt=\"ic-linkedin\"\r\n                  />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a target=\"__blank\" href=\"https://www.facebook.com/sundorabeauty\">\r\n                  <img src={icFaceBook} width={14} height={22.39} alt=\"ic-facebook\" />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a target=\"__blank\" href=\"https://www.instagram.com/sundorabeauty\">\r\n                  <img src={icInsta} width={21} height={24} alt=\"ic-instagram\" />\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"item-box\">\r\n            <h3>visit</h3>\r\n            <ul>\r\n              <li>\r\n                <span>\r\n                  <a\r\n                    href={`https://www.google.com/maps/search/${encodeURI(\r\n                      'Green City Square, Gr. Floor - Semi-basement, 750, Satmasjid Road, Dhanmondi',\r\n                    )}/`}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    <span\r\n                      className=\"icon-format material-icons\"\r\n                      style={{ top: -4, left: -28 }}\r\n                    >\r\n                      location_on\r\n                    </span>\r\n                    <p className=\"location\">\r\n                      Green City Square, Gr. Floor - Semi-basement, 750, Satmasjid Road,\r\n                      Dhanmondi\r\n                    </p>\r\n                  </a>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n            <ul>\r\n              <li>\r\n                <span>\r\n                  <a\r\n                    href={`https://www.google.com/maps/search/${encodeURI(\r\n                      'Delvista, Banani Rd# 12, FL# 3, H# 44, Banani',\r\n                    )}/`}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    <span\r\n                      className=\"icon-format material-icons\"\r\n                      style={{ top: -4, left: -28 }}\r\n                    >\r\n                      location_on\r\n                    </span>\r\n                    <p className=\"location\">\r\n                      DELVISTA, FL# 3, H# 44,RD# 12, BANANI 1213, DHAKA\r\n                    </p>\r\n                  </a>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n            <ul>\r\n              <li>\r\n                <span>\r\n                  {' '}\r\n                  <a\r\n                    href={`https://www.google.com/maps/search/${encodeURI(\r\n                      'Ventura Agnibeena, Gr. Floor, H#38, Rd#12, Banani',\r\n                    )}/`}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    <span\r\n                      className=\"icon-format material-icons\"\r\n                      style={{ top: -4, left: -28 }}\r\n                    >\r\n                      location_on\r\n                    </span>\r\n                    <p className=\"location\">\r\n                      Ventura Agnibeena, Gr. Floor, H#38, Rd#12, Banani\r\n                    </p>\r\n                  </a>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n            <ul>\r\n              <li>\r\n                <span>\r\n                  {' '}\r\n                  <a\r\n                    href={`https://www.google.com/maps/search/${encodeURI(\r\n                      'Casablanca, 114 Gulshan Ave, Gr. Floor, Gulshan',\r\n                    )}/`}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    <span\r\n                      className=\"icon-format material-icons\"\r\n                      style={{ top: -4, left: -28 }}\r\n                    >\r\n                      location_on\r\n                    </span>\r\n                    <p className=\"location\">Casablanca, 114 Gulshan Ave, Gr. Floor, Gulshan</p>\r\n                  </a>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {map(data, (item: any, index: number) => (\r\n            <FooterItem data={item} key={index} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nFooter.propTypes = {\r\n  iconList: PropTypes.array,\r\n};\r\n\r\nexport default memo(Footer);\r\n","/* eslint-disable */\r\n/**\r\n * Get the city and set the city input value to the one selected\r\n *\r\n * @param addressArray\r\n * @return {string}\r\n */\r\nexport const getCity = (addressArray: any) => {\r\n    let city = '';\r\n    for (let i = 0; i < addressArray.length; i++) {\r\n        if (addressArray[i].types[0] && 'locality' === addressArray[i].types[0]) {\r\n            city = addressArray[i].long_name;\r\n            return city;\r\n        }\r\n    }\r\n};\r\n/**\r\n * Get the postal code and set the postal code input value to the one selected\r\n *\r\n * @param addressArray\r\n * @return {string}\r\n */\r\nexport const getPostalCode = (addressArray: any) => {\r\n    let postalcode = '';\r\n    for (let i = 0; i < addressArray.length; i++) {\r\n        if (addressArray[i].types[0] && 'postal_code' === addressArray[i].types[0]) {\r\n            postalcode = addressArray[i].long_name;\r\n            return postalcode;\r\n        }\r\n    }\r\n};\r\n/**\r\n * Get the number street and set the number street input value to the one selected\r\n *\r\n * @param addressArray\r\n * @return {string}\r\n */\r\nexport const getNumber = (addressArray: any) => {\r\n    let number = '';\r\n    for (let i = 0; i < addressArray.length; i++) {\r\n        if (addressArray[i].types[0] && 'street_number' === addressArray[i].types[0]) {\r\n            number = addressArray[i].long_name;\r\n            return number;\r\n        }\r\n    }\r\n};\r\n/**\r\n * Get the street and set the street input value to the one selected\r\n *\r\n * @param addressArray\r\n * @return {string}\r\n */\r\nexport const getStreet = (addressArray: any) => {\r\n    let streetName = '';\r\n    for (let i = 0; i < addressArray.length; i++) {\r\n        if (addressArray[i].types[0] && 'route' === addressArray[i].types[0]) {\r\n            streetName = addressArray[i].long_name;\r\n            return streetName;\r\n        }\r\n    }\r\n};\r\n/**\r\n * Get the area and set the area input value to the one selected\r\n *\r\n * @param addressArray\r\n * @return {string}\r\n */\r\nexport const getArea = (addressArray: any) => {\r\n    let area = '';\r\n    for (let i = 0; i < addressArray.length; i++) {\r\n        if (addressArray[i].types[0]) {\r\n            for (let j = 0; j < addressArray[i].types.length; j++) {\r\n                if (\r\n                    'sublocality_level_1' === addressArray[i].types[j] ||\r\n                    'locality' === addressArray[i].types[j]\r\n                ) {\r\n                    area = addressArray[i].long_name;\r\n                    return area;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * Get the address and set the address input value to the one selected\r\n *\r\n * @param addressArray\r\n * @return {string}\r\n */\r\nexport const getState = (addressArray: any) => {\r\n    let state = '';\r\n    for (let i = 0; i < addressArray.length; i++) {\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (\r\n                addressArray[i].types[0] &&\r\n                'administrative_area_level_1' === addressArray[i].types[0]\r\n            ) {\r\n                state = addressArray[i].long_name;\r\n                return state;\r\n            }\r\n        }\r\n    }\r\n};\r\n/* eslint-disable */\r\n","import React, { createRef, memo, useEffect, useState } from 'react';\r\nimport Geocode from 'react-geocode';\r\nimport { GOOGLE_MAP_API } from '../../config';\r\nimport { RootStateOrAny, useSelector } from 'react-redux';\r\nimport { map } from 'lodash';\r\nimport AdaptiveInput from '../CheckoutForm/AdaptiveInput';\r\nimport { getCity, getArea, getStreet, getNumber, getPostalCode, getState } from './utils';\r\n\r\nfunction addressForm(props: any): JSX.Element {\r\n  const authState = useSelector((state: RootStateOrAny) => state.userReducer);\r\n  const [state, setState] = useState<any>({\r\n    address: '',\r\n    area: '',\r\n    building_or_block: '',\r\n    state: '',\r\n    street: '',\r\n    number: '',\r\n    city: '',\r\n    street2: '',\r\n    postal_code: '',\r\n    additional_info: '',\r\n    mapPosition: {\r\n      lat: 23.7919546,\r\n      lng: 90.4079771,\r\n    },\r\n    markerPosition: {\r\n      lat: 23.7919546,\r\n      lng: 90.4079771,\r\n    },\r\n  });\r\n\r\n  const [houseNumberAndStreet, setHouseNumberAndStreet] = useState<any>(\r\n    `${props.stateProps.number} ${props.stateProps.street}`,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (houseNumberAndStreet == '') {\r\n      return;\r\n    }\r\n    const words: any = houseNumberAndStreet?.trim()?.split(' ');\r\n    let indexSplit: any = 1;\r\n    for (let i = 0; i < words.length; i++) {\r\n      const word = words[i];\r\n      if (parseInt(word)) {\r\n        indexSplit = i + 1;\r\n        break;\r\n      }\r\n    }\r\n    setState({\r\n      ...state,\r\n      number: words?.splice(0, indexSplit).join(' ') || '',\r\n      street: words.join(' ') || '',\r\n    });\r\n  }, [houseNumberAndStreet]);\r\n\r\n  const postalCodeRef = createRef<any>();\r\n  const areaRef = createRef<any>();\r\n  const houseNumberAndStreetRef = createRef<any>();\r\n  const cityRef = createRef<any>();\r\n\r\n  const [validateForm, setValidateForm] = useState<any>({\r\n    postal_code: '',\r\n    area: '',\r\n    houseNumberAndStreet: '',\r\n    city: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    Geocode.setApiKey(GOOGLE_MAP_API);\r\n    Geocode.enableDebug();\r\n\r\n    Geocode.fromLatLng(state.mapPosition.lat, state.mapPosition.lng).then(\r\n      (response) => {\r\n        const { lat, lng } = response.results[0].geometry.location;\r\n        const address = response.results[0].formatted_address,\r\n          addressArray = response.results[0].address_components,\r\n          city = getCity(addressArray),\r\n          area = getArea(addressArray),\r\n          state = getState(addressArray),\r\n          street = getStreet(addressArray),\r\n          number = getNumber(addressArray),\r\n          postal_code = getPostalCode(addressArray);\r\n        // console.log('city', city, area, state, street);\r\n        // console.log(address);\r\n        setState((prevState: any) => ({\r\n          ...prevState,\r\n          address: address ? address : '',\r\n          area: area ? area : '',\r\n          city: city ? city : '',\r\n          state: state ? state : '',\r\n          street: street ? street : '',\r\n          number: number ? number : '',\r\n          postal_code: postal_code ? postal_code : '',\r\n          markerPosition: {\r\n            lat: lat,\r\n            lng: lng,\r\n          },\r\n          mapPosition: {\r\n            lat: lat,\r\n            lng: lng,\r\n          },\r\n        }));\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      },\r\n    );\r\n  }, []);\r\n\r\n  const onChange = (event: any) => {\r\n    setState({ ...state, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState(() => ({\r\n      id: props.stateProps.id ? props.stateProps.id : null,\r\n      address: props.stateProps.address || '',\r\n      area: props.stateProps?.area || '',\r\n      building_or_block: props.stateProps?.building_or_block || '',\r\n      city: props.stateProps.city || '',\r\n      state: props.stateProps.stateRes || '',\r\n      street: props.stateProps.street || '',\r\n      number: props.stateProps.number || '',\r\n      postal_code: props.stateProps.postal_code || '',\r\n      additional_info: props.stateProps?.additional_info || '',\r\n      markerPosition: {\r\n        lat: props.stateProps.newLat,\r\n        lng: props.stateProps.newLng,\r\n      },\r\n      mapPosition: {\r\n        lat: props.stateProps.newLat,\r\n        lng: props.stateProps.newLng,\r\n      },\r\n    }));\r\n\r\n    setHouseNumberAndStreet(`${props.stateProps.number} ${props.stateProps.street}`);\r\n  }, [props.stateProps]);\r\n\r\n  const checkValidInput = (value: any, ref: any, message: any) => {\r\n    const wordCount =\r\n      value && value.trim().replace(/\\s+/g, ' ').length > 0\r\n        ? value.trim().replace(/\\s+/g, ' ').length\r\n        : 0;\r\n\r\n    if (wordCount === 0) {\r\n      ref.current.focus();\r\n      ref.current.scrollIntoView({ block: 'center', behavior: 'smooth' });\r\n      return message;\r\n    }\r\n  };\r\n\r\n  const checkValidForm = () => {\r\n    const validPostalCode = checkValidInput(\r\n      state?.postal_code,\r\n      postalCodeRef,\r\n      'Please enter post code!',\r\n    );\r\n    const validArea = checkValidInput(state?.area, postalCodeRef, 'Please enter area!');\r\n    const validCity = checkValidInput(state?.city, cityRef, 'Please enter city!');\r\n    const validHouseNumberAndStreet = checkValidInput(\r\n      houseNumberAndStreet,\r\n      houseNumberAndStreetRef,\r\n      'Please enter house number and street name!',\r\n    );\r\n    setValidateForm({\r\n      ...validateForm,\r\n      ...{\r\n        area: validArea,\r\n        postal_code: validPostalCode,\r\n        houseNumberAndStreet: validHouseNumberAndStreet,\r\n        city: validCity,\r\n      },\r\n    });\r\n    if (validPostalCode || validArea || validHouseNumberAndStreet || validCity) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const updateAddress = () => {\r\n    if (!checkValidForm()) {\r\n      props.handleClickUpdateAddress(props.id, state);\r\n    }\r\n  };\r\n\r\n  const confirmAddress = () => {\r\n    if (!checkValidForm()) {\r\n      props.handleClickConfirmAddress(state);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-group\">\r\n        {map(props?.type ? authState?.address[props?.type] : '', (item, index) => {\r\n          return (\r\n            <button\r\n              key={index}\r\n              onClick={() => props.handleClickAddressItem(item)}\r\n              className={`address-info ${\r\n                item.id == props.id || item.id === props?.selectedAddressId ? 'active' : ''\r\n              }`}\r\n            >\r\n              {/* EDIT Lorem ipsum adres 123 */}\r\n              {item?.address}\r\n            </button>\r\n          );\r\n        })}\r\n        <button className=\"btn-add-address\" onClick={() => props.handleClickAddAddress()}>\r\n          + ADD ANOTHER ADDRESS\r\n        </button>\r\n      </div>\r\n      {/* {props.center.lat !== undefined ? ( */}\r\n\r\n      {props.showFormAddress ? (\r\n        <section className=\"wrapper-content-map\">\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <AdaptiveInput\r\n                type=\"text\"\r\n                for=\"houseNumberAndStreet\"\r\n                name=\"houseNumberAndStreet\"\r\n                label=\"Enter house number and street name\"\r\n                value={houseNumberAndStreet}\r\n                handleChange={(e: any) => setHouseNumberAndStreet(e.target.value)}\r\n                refName={houseNumberAndStreetRef}\r\n                validate={true}\r\n                validateContent={validateForm.houseNumberAndStreet}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <AdaptiveInput\r\n                type=\"text\"\r\n                for=\"city\"\r\n                name=\"city\"\r\n                label=\"Enter city\"\r\n                value={state.city || ''}\r\n                handleChange={onChange}\r\n                refName={cityRef}\r\n                validate={true}\r\n                validateContent={validateForm.city}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <AdaptiveInput\r\n                type=\"text\"\r\n                for=\"area\"\r\n                name=\"area\"\r\n                label=\"Enter Area\"\r\n                value={state.area || ''}\r\n                handleChange={onChange}\r\n                refName={areaRef}\r\n                validate={true}\r\n                validateContent={validateForm.area}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <AdaptiveInput\r\n                type=\"text\"\r\n                for=\"postal_code\"\r\n                name=\"postal_code\"\r\n                label=\"Enter postal code\"\r\n                value={state.postal_code || ''}\r\n                handleChange={onChange}\r\n                // required={true}\r\n                refName={postalCodeRef}\r\n                validate={true}\r\n                validateContent={validateForm.postal_code}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <AdaptiveInput\r\n                type=\"text\"\r\n                for=\"additional_info\"\r\n                name=\"additional_info\"\r\n                label=\"Additional Information\"\r\n                value={state.additional_info || ''}\r\n                handleChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <div className=\"submit-box\">\r\n                {props.isAllowDelete && props.isUpdate ? (\r\n                  <button onClick={() => props.handleDeleteAddress(props.id)}>\r\n                    DELETE ADDRESS\r\n                  </button>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {props.isUpdate && props.fromCheckOut ? (\r\n                  <button onClick={updateAddress}>CONFIRM ADDRESS</button>\r\n                ) : props.isUpdate && !props.fromCheckOut ? (\r\n                  <button onClick={updateAddress}>EDIT ADDRESS</button>\r\n                ) : (\r\n                  <button onClick={confirmAddress}>CONFIRM ADDRESS</button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default memo(addressForm);\r\n","import React, { memo, useEffect, useState } from 'react';\r\nimport Geocode from 'react-geocode';\r\nimport { GOOGLE_MAP_API } from '../../config';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as action from '../../redux/auth/actions';\r\nimport toastr from 'toastr';\r\nimport AddressForm from './addressForm';\r\nimport { getArea, getCity, getNumber, getPostalCode, getState, getStreet } from './utils';\r\nimport * as actionsProduct from '../../redux/product/actions';\r\nGeocode.setApiKey(GOOGLE_MAP_API);\r\nGeocode.enableDebug();\r\n\r\nfunction Map(props: any): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const [isUpdate, setUpdate] = useState<boolean>(false);\r\n  const [state, setState] = useState<any>({\r\n    address: '',\r\n    area: '',\r\n    building_or_block: '',\r\n    additional_info: '',\r\n    state: '',\r\n    street: '',\r\n    number: '',\r\n    city: '',\r\n    street2: '',\r\n    postal_code: '',\r\n    mapPosition: {\r\n      lat: 23.7919546,\r\n      lng: 90.4079771,\r\n    },\r\n    markerPosition: {\r\n      lat: 23.7919546,\r\n      lng: 90.4079771,\r\n    },\r\n  });\r\n  const [showFormAddress, setShowFormAddress] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    Geocode.fromLatLng(state.mapPosition.lat, state.mapPosition.lng).then(\r\n      (response) => {\r\n        const { lat, lng } = response.results[0].geometry.location;\r\n        const address = response.results[0].formatted_address,\r\n          addressArray = response.results[0].address_components,\r\n          city = getCity(addressArray),\r\n          area = getArea(addressArray),\r\n          state = getState(addressArray),\r\n          street = getStreet(addressArray),\r\n          number = getNumber(addressArray),\r\n          postal_code = getPostalCode(addressArray);\r\n        setState((prevState: any) => ({\r\n          ...prevState,\r\n          address: address ? address : '',\r\n          area: area ? area : '',\r\n          city: city ? city : '',\r\n          state: state ? state : '',\r\n          street: street ? street : '',\r\n          number: number ? number : '',\r\n          postal_code: postal_code ? postal_code : '',\r\n          markerPosition: {\r\n            lat: lat,\r\n            lng: lng,\r\n          },\r\n          mapPosition: {\r\n            lat: lat,\r\n            lng: lng,\r\n          },\r\n        }));\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      },\r\n    );\r\n  }, []);\r\n\r\n  const handleClickConfirmAddress = (newState: any) => {\r\n    if (props.type == 'shipping') {\r\n      props?.setLoading &&\r\n        props?.setLoading((prev: any) => ({ ...prev, confirmAddress: true }));\r\n      setTimeout(() => {\r\n        props?.setLoading &&\r\n          props?.setLoading((prev: any) => ({ ...prev, confirmAddress: false }));\r\n      }, 10000);\r\n      props?.setCheckoutForm &&\r\n        props?.setCheckoutForm((prev: any) => ({ ...prev, payment: null }));\r\n      dispatch(\r\n        actionsProduct.setMultiCardNamePlaceOrderForm({\r\n          multi_card_name: '',\r\n        }),\r\n      );\r\n    }\r\n\r\n    const {\r\n      area,\r\n      building_or_block,\r\n      state,\r\n      street,\r\n      number,\r\n      city,\r\n      postal_code,\r\n      additional_info,\r\n    } = newState;\r\n    const address = `${\r\n      building_or_block ? building_or_block + ',' : ''\r\n    } ${number} ${street}, ${area ? area + ',' : ''} ${city} ${postal_code}, Bangladesh`;\r\n\r\n    let error = '';\r\n    if (!localStorage.getItem('sundoraToken')) {\r\n      error = 'Please login to proceed';\r\n      if (localStorage.getItem('sundora_guest_id')) {\r\n        error = '';\r\n      }\r\n    }\r\n    if (!localStorage.getItem('sundoraToken') && !localStorage.getItem('sundora_guest_id')) {\r\n      error = 'Please login or provide guest user info';\r\n    }\r\n    if (error.length) {\r\n      toastr.error(error, 'Error');\r\n      return;\r\n    }\r\n\r\n    Geocode.fromAddress(address.toString()).then(\r\n      (response) => {\r\n        const { lat, lng } = response.results[0].geometry.location;\r\n\r\n        setState((prevState: any) => ({\r\n          ...prevState,\r\n          address: address ? address : '',\r\n          area: area ? area : '',\r\n          city: city ? city : '',\r\n          state: state ? state : '',\r\n          street: street ? street : '',\r\n          number: number ? number : '',\r\n          postal_code: postal_code ? postal_code : '',\r\n          markerPosition: {\r\n            lat: lat,\r\n            lng: lng,\r\n          },\r\n          mapPosition: {\r\n            lat: lat,\r\n            lng: lng,\r\n          },\r\n        }));\r\n\r\n        dispatch(\r\n          action.addAddressActions({\r\n            address: address ? address : '',\r\n            area: area ? area : '',\r\n            building_or_block: newState?.building_or_block ? newState?.building_or_block : '',\r\n            additional_info: additional_info ? additional_info : '',\r\n            state: state ? state : '',\r\n            street: street ? street : '',\r\n            number: number ? number : '',\r\n            city: city ? city : '',\r\n            postal_code: postal_code ? postal_code : '',\r\n            province: '',\r\n            province_code: '',\r\n            country_code: '880',\r\n            latitude: lat,\r\n            longitude: lng,\r\n            type: props?.type,\r\n            isCheckoutForm: props.isCheckoutForm || false,\r\n            user_id: parseInt(localStorage.getItem('sundora_guest_id') || ''),\r\n          }),\r\n        );\r\n\r\n        props.confirmAddressStep({\r\n          address: address ? address : '',\r\n          area: area ? area : '',\r\n          building_or_block: building_or_block ? building_or_block : '',\r\n          additional_info: additional_info ? additional_info : '',\r\n          state: state ? state : '',\r\n          street: street ? street : '',\r\n          number: number ? number : '',\r\n          city: city ? city : '',\r\n          province: '',\r\n          province_code: '',\r\n          country_code: '880',\r\n          latitude: lat,\r\n          longitude: lng,\r\n        });\r\n\r\n        setShowFormAddress(false);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      },\r\n    );\r\n  };\r\n\r\n  const handleClickUpdateAddress = (id: any, newState: any) => {\r\n    if (props.type == 'shipping') {\r\n      props?.setLoading &&\r\n        props?.setLoading((prev: any) => ({ ...prev, confirmAddress: true }));\r\n      setTimeout(() => {\r\n        props?.setLoading &&\r\n          props?.setLoading((prev: any) => ({ ...prev, confirmAddress: false }));\r\n      }, 10000);\r\n      props?.setCheckoutForm &&\r\n        props?.setCheckoutForm((prev: any) => ({ ...prev, payment: null }));\r\n      dispatch(\r\n        actionsProduct.setMultiCardNamePlaceOrderForm({\r\n          multi_card_name: '',\r\n        }),\r\n      );\r\n    }\r\n\r\n    const {\r\n      area,\r\n      building_or_block,\r\n      street,\r\n      number,\r\n      city,\r\n      postal_code,\r\n      additional_info,\r\n    } = newState;\r\n    const address = `${\r\n      building_or_block ? building_or_block + ',' : ''\r\n    } ${number} ${street}, ${area ? area + ',' : ''} ${city} ${postal_code}, Bangladesh`;\r\n\r\n    let error = '';\r\n    if (!localStorage.getItem('sundoraToken')) {\r\n      error = 'Please login to proceed';\r\n      if (localStorage.getItem('sundora_guest_id')) {\r\n        error = '';\r\n      }\r\n    }\r\n    if (!localStorage.getItem('sundoraToken') && !localStorage.getItem('sundora_guest_id')) {\r\n      error = 'Please login or provide guest user info';\r\n    }\r\n    if (error.length) {\r\n      toastr.error(error, 'Error');\r\n      return;\r\n    }\r\n\r\n    Geocode.fromAddress(address).then(\r\n      (response) => {\r\n        const { lat, lng } = response.results[0].geometry.location;\r\n\r\n        setState({\r\n          address: address ? address : '',\r\n          city: city ? city : '',\r\n          area: area ? area : '',\r\n          building_or_block: building_or_block ? building_or_block : '',\r\n          additional_info: additional_info ? additional_info : '',\r\n          street: street ? street : '',\r\n          number: number ? number : '',\r\n          postal_code: postal_code ? postal_code : '',\r\n          markerPosition: {\r\n            lat: lat,\r\n            lng: lng,\r\n          },\r\n          mapPosition: {\r\n            lat: lat,\r\n            lng: lng,\r\n          },\r\n        });\r\n\r\n        dispatch(\r\n          action.updateAddressActions({\r\n            id: id ? id : '',\r\n            address: address ? address : '',\r\n            area: area ? area : '',\r\n            building_or_block: building_or_block ? building_or_block : '',\r\n            additional_info: additional_info ? additional_info : '',\r\n            street: street ? street : '',\r\n            number: number ? number : '',\r\n            city: city ? city : '',\r\n            postal_code: postal_code ? postal_code : '',\r\n            province: '',\r\n            province_code: '',\r\n            country_code: '880',\r\n            latitude: lat,\r\n            longitude: lng,\r\n            type: props?.type,\r\n            isCheckoutForm: props.isCheckoutForm || false,\r\n          }),\r\n        );\r\n\r\n        setShowFormAddress(false);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      },\r\n    );\r\n  };\r\n\r\n  const handleClickAddressItem = (data: any) => {\r\n    setUpdate(true);\r\n    setState({\r\n      id: data?.id || null,\r\n      address: data?.address || '',\r\n      building_or_block: data?.building_or_block || '',\r\n      area: data?.area ? data.area : '',\r\n      city: data?.city || '',\r\n      state: data?.state ? data?.state : '',\r\n      street: data?.street || '',\r\n      number: data?.number || '',\r\n      postal_code: data?.postal_code || null,\r\n      additional_info: data?.additional_info || '',\r\n      markerPosition: {\r\n        lat: data?.latitude || '',\r\n        lng: data?.longitude || '',\r\n      },\r\n      mapPosition: {\r\n        lat: data?.latitude || '',\r\n        lng: data?.longitude || '',\r\n      },\r\n    });\r\n    setShowFormAddress(true);\r\n  };\r\n\r\n  const clearAddressForm = () => {\r\n    setUpdate(false);\r\n    setState(() => ({\r\n      address: '',\r\n      area: '',\r\n      building_or_block: '',\r\n      state: '',\r\n      street: '',\r\n      number: '',\r\n      city: '',\r\n      street2: '',\r\n      postal_code: '',\r\n      additional_info: '',\r\n\r\n      // new variant\r\n\r\n      // -----------\r\n      mapPosition: {\r\n        lat: null,\r\n        lng: null,\r\n      },\r\n      markerPosition: {\r\n        lat: null,\r\n        lng: null,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleClickAddAddress = () => {\r\n    clearAddressForm();\r\n    setShowFormAddress(true);\r\n  };\r\n\r\n  const handleDeleteAddress = (id: any) => {\r\n    dispatch(action.deleteAddressActions({ id: id, type: props?.type }));\r\n    clearAddressForm();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.center.lat !== undefined ? (\r\n        <section className=\"wrapper-content-map\">\r\n          <div>\r\n            <AddressForm\r\n              handleClickConfirmAddress={handleClickConfirmAddress}\r\n              handleClickUpdateAddress={handleClickUpdateAddress}\r\n              handleDeleteAddress={handleDeleteAddress}\r\n              center={props.center.lat}\r\n              handleClickAddAddress={handleClickAddAddress}\r\n              handleClickAddressItem={handleClickAddressItem}\r\n              stateProps={state}\r\n              isUpdate={isUpdate}\r\n              fromCheckOut={props.fromCheckOut}\r\n              isAllowDelete={props.isAllowDelete ? props.isAllowDelete : false}\r\n              id={state.id ? state.id : null}\r\n              type={props?.type}\r\n              showFormAddress={showFormAddress}\r\n              selectedAddressId={props.selectedAddressId}\r\n            />\r\n\r\n            {/* {showFormAddress ? (\r\n              <div style={{ minHeight: 'auto' }}>{renderAsyncMap()}</div>\r\n            ) : null} */}\r\n          </div>\r\n        </section>\r\n      ) : (\r\n        <div style={{ height: props.height }}>loading</div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default memo(Map);\r\n"],"sourceRoot":""}